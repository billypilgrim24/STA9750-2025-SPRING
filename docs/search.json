[
  {
    "objectID": "docs/mp01.html",
    "href": "docs/mp01.html",
    "title": "Analysis of NYC Payroll Policies",
    "section": "",
    "text": "Load necessary libraries\nlibrary(readr) library(dplyr) library(stringr) library(ggplot2) library(scales)\n\n\nRead and prepare the data\nnyc_data &lt;- read_csv(“nyc_payroll_export.csv”, show_col_types = FALSE) %&gt;% mutate( agency_name = str_to_title(agency_name), last_name = str_to_title(last_name), first_name = str_to_title(first_name), work_location_borough = str_to_title(work_location_borough), title_description = str_to_title(title_description), leave_status_as_of_june_30 = str_to_title(leave_status_as_of_june_30) )\n\n\nCompute Total Compensation\nnyc_data &lt;- nyc_data %&gt;% mutate( Total_Compensation = case_when( str_detect(title_description, regex(“Mayor”, ignore_case = TRUE)) ~ base_salary, pay_basis == “HOURLY” & regular_hours &gt; 0 ~ regular_gross_paid + (1.5 * (regular_gross_paid / regular_hours) * ot_hours), pay_basis == “DAILY” ~ base_salary * (regular_hours / 7.5), TRUE ~ NA_real_ ) )\n\n\nAnalysis I: Capping Salaries at Mayoral Level\nmayor_pay &lt;- nyc_data %&gt;% filter(str_detect(title_description, regex(“Mayor”, ignore_case = TRUE))) %&gt;% group_by(fiscal_year) %&gt;% summarise(mayor_salary = sum(base_salary))\noverpaid_employees &lt;- nyc_data %&gt;% left_join(mayor_pay, by = “fiscal_year”) %&gt;% filter(Total_Compensation &gt; mayor_salary)\nsavings &lt;- overpaid_employees %&gt;% mutate(savings = Total_Compensation - mayor_salary) %&gt;% summarise(total_savings = sum(savings))\n\n\nAnalysis II: Increasing Staffing to Reduce Overtime\novertime_savings &lt;- nyc_data %&gt;% group_by(agency_name, title_description) %&gt;% summarise( total_ot_hours = sum(ot_hours, na.rm = TRUE), total_ot_paid = sum(total_ot_paid, na.rm = TRUE), avg_hourly_rate = mean(regular_gross_paid / regular_hours, na.rm = TRUE) ) %&gt;% mutate( new_employees_needed = ceiling(total_ot_hours / 2000), potential_savings = total_ot_paid - (total_ot_hours * avg_hourly_rate) )\nagency_savings &lt;- overtime_savings %&gt;% group_by(agency_name) %&gt;% summarise( total_new_employees = sum(new_employees_needed), total_savings = sum(potential_savings) )\n\n\nAnalysis III: Attrition-Based Reduction\nattrition_rate &lt;- nyc_data %&gt;% group_by(fiscal_year) %&gt;% summarise( total_employees = n_distinct(payroll_number), employees_left = sum(leave_status_as_of_june_30 == “Ceased”) ) %&gt;% mutate(attrition_rate = employees_left / total_employees)\npayroll_reduction &lt;- nyc_data %&gt;% group_by(fiscal_year) %&gt;% summarise(total_payroll = sum(base_salary + total_ot_paid, na.rm = TRUE)) %&gt;% left_join(attrition_rate, by = “fiscal_year”) %&gt;% mutate(projected_payroll = total_payroll * (1 - attrition_rate))\n\n\nVisualizations\nagency_savings %&gt;% arrange(desc(total_savings)) %&gt;% head(10) %&gt;% mutate(agency_name = fct_reorder(agency_name, total_savings)) %&gt;% ggplot(aes(x = total_savings, y = agency_name)) + geom_col() + scale_x_continuous(labels = label_dollar()) + labs( title = “Top 10 Agencies by Potential Overtime Savings”, x = “Potential Savings”, y = “Agency” )\npayroll_reduction %&gt;% ggplot(aes(x = fiscal_year, y = total_payroll)) + geom_line() + geom_line(aes(y = projected_payroll), linetype = “dashed”) + scale_y_continuous(labels = label_dollar()) + labs( title = “Projected NYC Payroll with Attrition Freeze”, x = “Fiscal Year”, y = “Total Payroll” )"
  }
]